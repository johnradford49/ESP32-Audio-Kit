esphome:
  name: a1s
  friendly_name: A1S


esp32:
  board: esp-wrover-kit
  framework:
    type: arduino
 
logger:
api:

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


i2c:
  sda: GPIO33
  scl: GPIO32

external_components:
  - source: github://mulcmu/esphome-es8388-a1s
    components: [es8388]

i2s_audio:
  i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO27

es8388:
media_player:
  - platform: i2s_audio
    name: "ESP32 Audio Kit"
    #i2s_lrclk_pin: GPIO25
    i2s_dout_pin: GPIO26
    #i2s_bclk_pin: GPIO27
    dac_type: external
    mode: stereo

 
switch:
  - platform: gpio
    pin: GPIO21
    id: amp_switch
    name: "AMP Switch"
    #restore_mode: ALWAYS_ON

    
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO22
      inverted: true
      mode:
        input: true
        pullup: true
    name: "on_hook"
    on_press: 
      then:
        - switch.turn_off: amp_switch
        - text_sensor.template.publish:
            id: nd
            state: ""
    on_release: 
      then:
        - switch.turn_on: amp_switch 
        - text_sensor.template.publish:
            id: nd
            state: ""   

  - platform: gpio
    id: dial_off_stop
    #name: "dial_off_stop"
    pin:
      number: GPIO23
      inverted: true
      mode:
        input: true
        pullup: true
    on_press: 
      then:
        - pulse_meter.set_total_pulses:
            id: Pulse_Counter
            value: 0
    on_release: 
      then:
        - text_sensor.template.publish:
            id: nd
            state: !lambda |-
              int num = std::stoi((id(nd).state) + std::to_string(id(dd).state));
              return (std::to_string(num));      

sensor:
  - platform: pulse_meter
    pin: GPIO19
    id: Pulse_Counter
    internal_filter: 10ms
    internal_filter_mode: pulse
    total:
      name: "dd"
      id: dd
       
   
text_sensor:
  - platform: template
    id: nd
    name: "Number Dialed"
    
    
